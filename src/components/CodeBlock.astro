---
import { createHighlighter } from "shiki";

const { code = "", language = "ts", filename = "" } = Astro.props;

const highlighter = await createHighlighter({
  themes: ["catppuccin-mocha"],
  langs: [language],
});

const highlighted = highlighter.codeToHtml(code.trim(), {
  lang: language,
  theme: "catppuccin-mocha",
});

// ID único para evitar colisiones
const uid = "tooltip-" + Math.random().toString(36).slice(2, 8);
---

<div
  class="relative rounded-xl overflow-hidden mb-6 shadow-sm"
  style="background-color: #1e1e2e;"
>
  <div
    class="flex justify-between items-center px-4 py-2 text-sm text-slate-400 border-b border-[#313244] font-mono"
    style="background-color: #1e1e2e;"
  >
    <span>{filename}</span>
    <div class="flex items-center gap-2">
      <span
        id={uid}
        class="text-green-400 text-xs opacity-0 transition-opacity duration-200 ease-in"
        aria-live="polite"
      >
        ¡Copiado!
      </span>
      <button
        class="px-2 py-1 bg-[#313244] hover:bg-[#45475a] text-white text-xs rounded flex items-center gap-1 transition"
        aria-label="Copiar código"
        onclick={`(() => {
          navigator.clipboard.writeText(\`${code.trim()}\`).then(() => {
            const tooltip = document.getElementById('${uid}');
            tooltip.style.opacity = '1';
            setTimeout(() => tooltip.style.opacity = '0', 1500);
          });
        })()`}
      >
        <svg
          class="w-4 h-4"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M8 16h8M8 12h8m-4-8h4a2 2 0 012 2v12a2 2 0 01-2 2H8a2 2 0 01-2-2V6a2 2 0 012-2h4z"
          ></path>
        </svg>
        Copiar
      </button>
    </div>
  </div>

  <div
    class="p-4 overflow-x-auto text-sm leading-relaxed font-mono"
    set:html={highlighted}
  />
</div>
